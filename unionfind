By Array
int find(int x, vector<int> &nums){
        if(nums[x]==x)return x;
        int root=find(nums[x], nums);
        nums[x]=root;
        return root;
    }



By map

int find(int x, unordered_map<int,int> &umap){
        if(umap[x])==x)return x;
        int root=find(umap[x]);
        umap[x] = root;
        return root;
}




vector<int> nums(graph.size());
    for(int i = 0; i <graph.size();i++){
        nums[i]= i; 
    }
    for(int i =0; i <graph.size();i++){
        for(int k = 0; k <graph[i].size();k++){
            int root1 = find(i,nums);
            int root2 = find(graph[i][k],nums);
            if(root1!=root2){
                nums[root1] = root2;
                
            }
        }
    }
